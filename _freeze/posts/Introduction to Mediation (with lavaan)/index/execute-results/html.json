{
  "hash": "f43d38237add4d9c06fca1c8d19b824a",
  "result": {
    "markdown": "---\ntitle: \"Introduction to Mediation\"\nformat: \n  revealjs:\n    theme: league\n    transition: slide\n    background-transition: zoom\n    slide-number: c/t\n    show-slide-number: all\n    chalkboard: true\n    background-size: cover\n    smaller: true\n    echo: true\n    code-fold: true\n    code-summary: \"Show the code\"\nauthor: \"Dr Lazaros Gonidis\"\ndate: \"2024-01-27\"\nimage: \"image1.jpg\"\n---\n\n\n## Today's Aims\n\n1.  Introduce the concept of Mediation\n2.  Discuss a Simple Mediation Model\n3.  Use of basic path analysis for Mediation\n4.  Use of lavaan for mediation\n5.  Serial and parallel mediation\n\n## Linear models\n\nSo far we have discussed linear models where a variable **Y** regresses on **X**\n\n$$\ny = b_0 +b_1x_1 + ε\n$$\n\nOr, variable **Y** regresses on more than one variables, **X1, X2, ...**\n\n$$\ny = b_0 +b_1x_1 + b_2x_2 + ε_1\n$$\n\n## Linear models\n\nThese models allowed us to test hypotheses where exogenous observed variables **X1, X2, ...** would have an effect on an endogenous observed variable **Y**\n\nHowever, in this approach we did not examine for potential impact of **X1 on X2, and consequently the impact of X2 on Y.**\n\n## The Simple Mediation Model\n\nToday we will introduce a new concept where two **predicting variables X and M** predict an endogenous observed variable **Y.**\n\nFurthermore, variable **X** also influences variable **M**. We will be referring to variable **M** as our **Mediator.**\n\nIt is also worth noting here that different sources and approaches are even stricter on the above by also requesting that these relations are **causal**.\n\nIn other words, **X causally influences M and Y, and M causally influences Y.**\n\n## The Simple Mediation Model visually\n\n![](mediation.JPG){width=\"763\"}\n\n## Guidelines prior to carry out mediation analysis\n\n<div>\n\n::: columns\n::: {.column width=\"20%\"}\n![](paths.JPG){width=\"373\" height=\"298\"}\n:::\n\n::: {.column width=\"80%\"}\n1.  **X** should significantly predict **Y** (**path c**, although some authors argue this is not required)\\*\n\n2.  **X** must significantly predict **M (path a)**\n\n3.  **M** must significantly predict **Y (path b)**\n\n    Note: Typically the path above is called **c path**, whereas the direct path in the mediation would be called **c' path.** However, you will mostly be seeing the direct path in the mediation models also being called **c path** as well. Please be aware of this.\n:::\n:::\n\n</div>\n\n## Let us explore an example with data\n\nFirst we will create some random data. As we mentioned last week, in this module we will be working exclusively with randomly generated data. **Please note that it will also be required to generate random data for your assignments too.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(13548) #note that we set the seed to a specific value\nX <- rnorm(250) #number of observations\nM <- 0.60*X + rnorm(250) # what does the 0.4 and rnorm represent here?\nY <- 0.35*M +  rnorm(250) # what does the 0.6 and rnorm represent here?\n\ndf <- data.frame(X=X, Y=Y, M=M)\n```\n:::\n\n\n## First we will investigate the c path in regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_XY <- lm(Y~X, data = df) # seen above as path c\nsummary(model_XY)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Y ~ X, data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.5268 -0.7677 -0.0760  0.7206  3.5104 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)  \n(Intercept)  0.03976    0.06851   0.580   0.5622  \nX            0.16775    0.07119   2.356   0.0192 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.083 on 248 degrees of freedom\nMultiple R-squared:  0.0219,\tAdjusted R-squared:  0.01796 \nF-statistic: 5.553 on 1 and 248 DF,  p-value: 0.01923\n```\n:::\n:::\n\n\n## Path a in regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_XM <- lm(M~X, data = df) # seen above as path a \nsummary(model_XM)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = M ~ X, data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.1693 -0.7082  0.0269  0.6571  3.2536 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept) -0.00179    0.06358  -0.028    0.978    \nX            0.61127    0.06606   9.253   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.005 on 248 degrees of freedom\nMultiple R-squared:  0.2566,\tAdjusted R-squared:  0.2536 \nF-statistic: 85.61 on 1 and 248 DF,  p-value: < 2.2e-16\n```\n:::\n:::\n\n\n## Path b in regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmodel_MY <- lm(Y~M, data = df) # seen above as path b  \nsummary(model_MY)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = Y ~ M, data = df)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.31772 -0.66815 -0.00959  0.65951  2.66509 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  0.03999    0.06416   0.623    0.534    \nM            0.35395    0.05525   6.406 7.46e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.015 on 248 degrees of freedom\nMultiple R-squared:  0.142,\tAdjusted R-squared:  0.1385 \nF-statistic: 41.03 on 1 and 248 DF,  p-value: 7.458e-10\n```\n:::\n:::\n\n\n## The Simple Mediation Model visually\n\n![](mediation.JPG){width=\"763\"}\n\n## We will now specify and fit a path analysis mediaton model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lavaan)\nlibrary(semPlot)\n\nmodel_med <- ' # direct effect\n             Y ~ c*X\n           # mediator\n             M ~ a*X\n             Y ~ b*M\n           # indirect effect (a*b)\n             ab := a*b\n           # total effect\n             total := c + (a*b)\n         '\nmodel_med_fit <- sem(model_med, data = df, se = 'bootstrap', bootstrap = 1000, )\n```\n:::\n\n\n## Guidelines prior to carry out mediation analysis\n\n<div>\n\n::: columns\n::: {.column width=\"20%\"}\n![](mediation.JPG)\n:::\n\n::: {.column width=\"80%\"}\n```         \nmodel_med <- ' # direct effect\n             Y ~ c*X\n           # mediator\n             M ~ a*X\n             Y ~ b*M\n           # indirect effect (a*b)\n             ab := a*b\n           # total effect\n             total := c + (a*b)\n         '\n```\n:::\n:::\n\n</div>\n\n## Exploring the model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model_med_fit, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE, ci = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.17 ended normally after 1 iteration\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                         5\n\n  Number of observations                           250\n\nModel Test User Model:\n                                                      \n  Test statistic                                 0.000\n  Degrees of freedom                                 0\n\nModel Test Baseline Model:\n\n  Test statistic                               113.139\n  Degrees of freedom                                 3\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    1.000\n  Tucker-Lewis Index (TLI)                       1.000\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)               -712.004\n  Loglikelihood unrestricted model (H1)       -712.004\n                                                      \n  Akaike (AIC)                                1434.009\n  Bayesian (BIC)                              1451.616\n  Sample-size adjusted Bayesian (SABIC)       1435.766\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.000\n  90 Percent confidence interval - lower         0.000\n  90 Percent confidence interval - upper         0.000\n  P-value H_0: RMSEA <= 0.050                       NA\n  P-value H_0: RMSEA >= 0.080                       NA\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.000\n\nParameter Estimates:\n\n  Standard errors                            Bootstrap\n  Number of requested bootstrap draws             1000\n  Number of successful bootstrap draws            1000\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|) ci.lower ci.upper\n  Y ~                                                                   \n    X          (c)   -0.065    0.086   -0.762    0.446   -0.241    0.097\n  M ~                                                                   \n    X          (a)    0.611    0.066    9.219    0.000    0.475    0.737\n  Y ~                                                                   \n    M          (b)    0.381    0.068    5.604    0.000    0.248    0.517\n   Std.lv  Std.all\n                  \n   -0.065   -0.058\n                  \n    0.611    0.507\n                  \n    0.381    0.406\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|) ci.lower ci.upper\n   .Y                 1.018    0.086   11.783    0.000    0.839    1.185\n   .M                 1.002    0.083   12.063    0.000    0.843    1.175\n   Std.lv  Std.all\n    1.018    0.856\n    1.002    0.743\n\nR-Square:\n                   Estimate\n    Y                 0.144\n    M                 0.257\n\nDefined Parameters:\n                   Estimate  Std.Err  z-value  P(>|z|) ci.lower ci.upper\n    ab                0.233    0.053    4.365    0.000    0.135    0.347\n    total             0.168    0.074    2.259    0.024    0.025    0.306\n   Std.lv  Std.all\n    0.233    0.206\n    0.168    0.148\n```\n:::\n:::\n\n\n## Parameter Estimates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparameterEstimates(model_med_fit, level = .95)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    lhs op     rhs label    est    se      z pvalue ci.lower ci.upper\n1     Y  ~       X     c -0.065 0.086 -0.762  0.446   -0.241    0.097\n2     M  ~       X     a  0.611 0.066  9.219  0.000    0.475    0.737\n3     Y  ~       M     b  0.381 0.068  5.604  0.000    0.248    0.517\n4     Y ~~       Y        1.018 0.086 11.783  0.000    0.839    1.185\n5     M ~~       M        1.002 0.083 12.063  0.000    0.843    1.175\n6     X ~~       X        0.926 0.000     NA     NA    0.926    0.926\n7    ab :=     a*b    ab  0.233 0.053  4.365  0.000    0.135    0.347\n8 total := c+(a*b) total  0.168 0.074  2.259  0.024    0.025    0.306\n```\n:::\n:::\n\n\n## Standardised Parameter Estimates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlavaan::standardizedsolution(model_med_fit, level = .95)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    lhs op     rhs label est.std    se      z pvalue ci.lower ci.upper\n1     Y  ~       X     c  -0.058 0.076 -0.760  0.447   -0.207    0.091\n2     M  ~       X     a   0.507 0.043 11.678  0.000    0.422    0.592\n3     Y  ~       M     b   0.406 0.074  5.497  0.000    0.261    0.551\n4     Y ~~       Y         0.856 0.046 18.675  0.000    0.766    0.945\n5     M ~~       M         0.743 0.044 16.914  0.000    0.657    0.830\n6     X ~~       X         1.000 0.000     NA     NA    1.000    1.000\n7    ab :=     a*b    ab   0.206 0.045  4.573  0.000    0.118    0.294\n8 total := c+(a*b) total   0.148 0.064  2.315  0.021    0.023    0.273\n```\n:::\n:::\n\n\n## Visualising the path analysis mediation model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsemPaths(model_med_fit,\n         whatLabels = \"est\",\n         sizeMan = 10,          \n         style = \"ram\",          \n         layout = \"tree\",\n         intercepts = FALSE,\n         rotation = 2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## Add significance stars\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(semptools)\nplot_med <- semPaths(model_med_fit,\n         whatLabels = \"est\",\n         sizeMan = 10,          \n         style = \"ram\",          \n         layout = \"tree\",\n         intercepts = FALSE,\n         rotation = 2, edge.label.cex = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n## Are you ready for the first headache question?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_med <- mark_sig(plot_med,model_med_fit)\nplot(plot_med)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## How can we interpret the above?\n\nWe see that the paths **a** and **b** are significant. The same cannot be said for the path **c.** We also have a significant **indirect effect** and a significant **total effect**.\n\nIn this case our direct path **c** is no longer significant, hence this is a case of **full mediation**\n\nIf **both** the **indirect path ab** and the **direct path c** were significant this would have been a case of **partial mediation**.\n\nIf the **indirect path** was non-significant this would have been a case of **no mediation.**\n\n## How do we report it?\n\nNote that the following is just a guideline and was written based on the standardized estimates.\n\n'Initial analysis indicated that X significantly predicted M and Y, and M significantly predicted Y. However, when M was incorporated as a mediator in the X and Y relationship a full mediation occurred where the indirect effect was significant (b = 0.23, p \\< .001, z = 4.57, se = 0.21, ci\\[0.95\\] = (0.12 - 0.29), the total effect was also significant (b = 0.17, p \\< .021, z= 2.32, se = 0.06, ci(0.95) = \\[0.02 - 0.27\\]. The direct path of X predicting y was no longer significant (b = 0.06, p = .447, z= -0.76, se = 0.08, ci(0.95) = \\[-0.21 - 0.09\\]. Both paths ***a*** (X-\\>M) and ***b*** (M-\\>Y) were significant, (b = 0.51, p \\< .001, z = 11.68, se = 0.04, ci\\[0.95\\] = (0.42 - 0.59) and (b = 0.41, p \\< .001, z = 5.50, se = 0.07, ci\\[0.95\\] = (0.26 - 0.55) respectively. This was in line with our hypothesis that the relationship between X and Y can be entirely explained by changes in M.'\n\n## We will now apply what we learnt with a more complex example\n\nPlease log on to your Posit account and access the **Week2** project where you can work on an example of serial mediation with 2 mediators.\n\n## Parallel Mediation\n\n![](p_mediation.JPG)\n\n## Create the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(13548) #note that we set the seed to a specific value\nX <- rnorm(250) #number of observations\nM1 <- 0.60*X + rnorm(250)# what does the 0.4 and rnorm represent here?\nM2 <- 0.50*X + rnorm(250)\nY <- 0.35*M +  rnorm(250) # what does the 0.6 and rnorm represent here?\n\ndf <- data.frame(X=X, Y=Y, M1=M1, M2=M2)\n```\n:::\n\n\n## We will now specify and fit a path analysis model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lavaan) \nlibrary(semPlot)  \nmodel2_med <- ' \n# alternative syntax of the model            \nY ~ c*X + b1*M1 + b2*M2           \nM1 ~ a1*X              \nM2 ~ a2*X     \n\n# indirect effects (a*b)              \na1b1 := a1*b1\na2b2 := a2*b2\n# total effect              \ntotal := c + (a1*b1) + (a2*b2)          \n' \nmodel2_med_fit <- sem(model2_med, data = df, se = 'bootstrap', bootstrap = 1000)\n```\n:::\n\n\n## Exploring the model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(model2_med_fit, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE, ci = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nlavaan 0.6.17 ended normally after 1 iteration\n\n  Estimator                                         ML\n  Optimization method                           NLMINB\n  Number of model parameters                         8\n\n  Number of observations                           250\n\nModel Test User Model:\n                                                      \n  Test statistic                                 0.243\n  Degrees of freedom                                 1\n  P-value (Chi-square)                           0.622\n\nModel Test Baseline Model:\n\n  Test statistic                               140.934\n  Degrees of freedom                                 6\n  P-value                                        0.000\n\nUser Model versus Baseline Model:\n\n  Comparative Fit Index (CFI)                    1.000\n  Tucker-Lewis Index (TLI)                       1.034\n\nLoglikelihood and Information Criteria:\n\n  Loglikelihood user model (H0)              -1076.137\n  Loglikelihood unrestricted model (H1)      -1076.016\n                                                      \n  Akaike (AIC)                                2168.275\n  Bayesian (BIC)                              2196.446\n  Sample-size adjusted Bayesian (SABIC)       2171.086\n\nRoot Mean Square Error of Approximation:\n\n  RMSEA                                          0.000\n  90 Percent confidence interval - lower         0.000\n  90 Percent confidence interval - upper         0.132\n  P-value H_0: RMSEA <= 0.050                    0.717\n  P-value H_0: RMSEA >= 0.080                    0.181\n\nStandardized Root Mean Square Residual:\n\n  SRMR                                           0.008\n\nParameter Estimates:\n\n  Standard errors                            Bootstrap\n  Number of requested bootstrap draws             1000\n  Number of successful bootstrap draws            1000\n\nRegressions:\n                   Estimate  Std.Err  z-value  P(>|z|) ci.lower ci.upper\n  Y ~                                                                   \n    X          (c)    0.003    0.090    0.035    0.972   -0.174    0.172\n    M1        (b1)    0.279    0.069    4.019    0.000    0.143    0.414\n    M2        (b2)    0.008    0.062    0.121    0.904   -0.113    0.132\n  M1 ~                                                                  \n    X         (a1)    0.611    0.063    9.718    0.000    0.477    0.731\n  M2 ~                                                                  \n    X         (a2)    0.454    0.067    6.736    0.000    0.320    0.593\n   Std.lv  Std.all\n                  \n    0.003    0.003\n    0.279    0.297\n    0.008    0.008\n                  \n    0.611    0.507\n                  \n    0.454    0.397\n\nVariances:\n                   Estimate  Std.Err  z-value  P(>|z|) ci.lower ci.upper\n   .Y                 1.077    0.093   11.551    0.000    0.885    1.248\n   .M1                1.002    0.083   12.104    0.000    0.831    1.156\n   .M2                1.019    0.086   11.887    0.000    0.852    1.184\n   Std.lv  Std.all\n    1.077    0.910\n    1.002    0.743\n    1.019    0.842\n\nR-Square:\n                   Estimate\n    Y                 0.090\n    M1                0.257\n    M2                0.158\n\nDefined Parameters:\n                   Estimate  Std.Err  z-value  P(>|z|) ci.lower ci.upper\n    a1b1              0.170    0.045    3.815    0.000    0.086    0.259\n    a2b2              0.003    0.029    0.119    0.905   -0.052    0.062\n    total             0.177    0.079    2.227    0.026    0.011    0.336\n   Std.lv  Std.all\n    0.170    0.151\n    0.003    0.003\n    0.177    0.156\n```\n:::\n:::\n\n\n## Parameter Estimates\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparameterEstimates(model_med_fit, level = .95)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    lhs op     rhs label    est    se      z pvalue ci.lower ci.upper\n1     Y  ~       X     c -0.065 0.086 -0.762  0.446   -0.241    0.097\n2     M  ~       X     a  0.611 0.066  9.219  0.000    0.475    0.737\n3     Y  ~       M     b  0.381 0.068  5.604  0.000    0.248    0.517\n4     Y ~~       Y        1.018 0.086 11.783  0.000    0.839    1.185\n5     M ~~       M        1.002 0.083 12.063  0.000    0.843    1.175\n6     X ~~       X        0.926 0.000     NA     NA    0.926    0.926\n7    ab :=     a*b    ab  0.233 0.053  4.365  0.000    0.135    0.347\n8 total := c+(a*b) total  0.168 0.074  2.259  0.024    0.025    0.306\n```\n:::\n:::\n\n\n## Visualisation of the model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_med2 <- semPaths(model2_med_fit,\n         whatLabels = \"est\",\n         sizeMan = 10,          \n         style = \"ram\",          \n         layout = \"tree\",\n         intercepts = FALSE,\n         rotation = 2, edge.label.cex = 1)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n## Add significance stars\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_med2 <- mark_sig(plot_med2,model2_med_fit)\nplot(plot_med2)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n## What would your interpretation be?\n\n## Follow-up topics\n\nThis Friday we are having our first Zoom session at 12 noon.\n\nThere we will be chatting about questions you might have but I also want you to explore 2 questions.\n\n1.  How can I add a variable in order to investigate for moderation effects between X and M?\n2.  How can I control for a specific variable in the simple mediation model? For example how can I control for the impact of age?\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}